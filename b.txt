Repository Management:
git init: Initializes a new Git repository in the current directory.
git clone [url]: Creates a local copy of a remote repository.
git config: Configures Git settings (e.g., user name, email).
Staging and Committing:
git add [file]: Adds a file or changes to the staging area.
git add .: Adds all changes in the current directory to the staging area.
git commit -m "[message]": Records staged changes with a descriptive message.
git status: Shows the status of files in the working directory and staging area.
git diff: Shows changes that are not yet staged.
git diff --staged: Shows changes that are staged but not yet committed. 
Branching and Merging:
git branch: Lists all local branches.
git branch [branch-name]: Creates a new branch.
git checkout [branch-name]: Switches to a different branch.
git checkout -b [new-branch-name]: Creates and switches to a new branch.
git merge [branch-name]: Merges changes from one branch into the current branch.
Remote Operations:
git remote add origin [url]: Adds a remote repository.
git push origin [branch-name]: Uploads committed changes to a remote repository.
git pull origin [branch-name]: Fetches and merges changes from a remote repository.
git fetch: Downloads changes from a remote repository without merging. 
History and Undo:
git log: Shows the commit history.
git reset [commit-id]: Resets the HEAD to a previous commit, potentially discarding changes.
git revert [commit-id]: Creates a new commit that undoes the changes of a specified commit.
git stash: Temporarily saves uncommitted changes.
git stash pop: Applies the latest stashed changes.
Other Useful Commands:
git rm [file]: Removes a file from the working directory and staging area.
git mv [old-name] [new-name]: Renames or moves a file.
git clean: Removes untracked files from the working directory.
git tag: Manages tags for specific commit points.
